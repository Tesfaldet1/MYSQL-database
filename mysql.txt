-- SQL for creating the coffee_store database
create database caffee_store;
use caffee_store;

CREATE TABLE products (
	id INT AUTO_INCREMENT PRIMARY KEY,
	name VARCHAR(30),
	price varchar(30) not null, 
	coffee_origin VARCHAR(30) 
);

insert into products(name, price, coffee_origin) values("StumptownCoffee" , null, "Roaster");
insert into products(name, price, coffee_origin) values("Intelligentsia", null, "shutterstok");
insert into products(name, price, coffee_origin) values("Lavazza", null, "Valdimkaproduction");
insert into products(name, price, coffee_origin) values("CaribouCoffee", null, "nasscaffe");
insert into products(name, price, coffee_origin) values("CostaCoffe", null, "nasscaffe");
select * from tables;
select * from products;
CREATE TABLE customers (
	id INT AUTO_INCREMENT PRIMARY KEY,
	first_name VARCHAR(30),
	last_name VARCHAR(30),
	gender ENUM('M','F'),
	phone_number VARCHAR(11)
);
INSERT INTO customers (first_name, last_name, gender, phone_number) VALUES ('Chris','Martin','M','0323147789'),
('Emma','Law','F','01123439899'),('Mark','Watkins','M','01174592013'),
('Daniel','Williams','M',NULL),('Sarah','Taylor','F','01176348290'),
('Katie','Armstrong','F','01145787353'),('Michael','Bluth','M','01980289282'),
('Kat','Nash','F','01176987789'),('Buster','Bluth','M','01173456782'),
('Charlie',NULL,'F','039287883'),('Lindsay','Bluth','F','076923804'),
('Harry','Johnson','M',NULL),('John','Smith','M','074987221'),
('John','Taylor','M',NULL),('Emma','Smith','F','076984116'),
('Gob','Bluth','M','01176985498'),('George','Bluth','M','076984303'),
('Lucille','Bluth','F','01198773214'),('George','Evans','M','04502933'),
('Emily','Simmonds','F','01899284352'),('John','Smith','M','01144473330'),
('Jennifer',NULL,'F',NULL),('Toby','West','M','01176009822'),
('Paul','Edmonds','M','0766947113');
select * from customers;

CREATE TABLE orders (
	id INT AUTO_INCREMENT PRIMARY KEY,
	product_id INT,
	customer_id INT,
	order_time DATETIME,
	FOREIGN KEY (product_id) REFERENCES products(id),
	FOREIGN KEY (customer_id) REFERENCES customers(id)
);
show tables;
create database mysqldata;
use mysqldata;
create table address(
id int   not null  primary key auto_increment,
city varchar(30),
zip_code varchar(30) not null
);


-- READ: Retrives data from the collection
select * from address;
select id, zip_code from address;
select id as addressId, zip_code as zipCode from address;
use mysqldata;
-- INSERT
insert into address(CITY, ZIP_CODE) values('Växjö', '35264');
insert into address(CITY, ZIP_CODE) values('Växjö', '35252');
insert into address(CITY, ZIP_CODE) values('test', '12345');
insert into address(CITY, ZIP_CODE) values('Jönköping', '35246');

-- UPDATE 
update address set zip_code = '35222' where id = 3;
show tables;

-- truncate is used to remove table content/ rows
truncate table address;

-- DELETE
delete from address where id = 3;

-- ALTER TABLE
alter table address modify city varchar(40);
alter table address add street varchar(80) default 'TEST';
alter table address drop street;

-- One TO One (PERSON - ADDRESS)
create table person(
id int   not null   primary key   auto_increment,
first_name varchar(255) not null,
last_name varchar(255) not null,
email varchar(255) not null unique, 
birth_date date not null,
reg_date datetime  default now(),
_active tinyint default false,
address_id int not null,
foreign key (address_id) references address(id)
);
select * from person;
insert into person(first_name, last_name, email, birth_date, address_id) values('Andom', 'Hadera', 'andom.hadera@lexicon.se', '2020-01-01' , 1);
insert into person(first_name, last_name, email, birth_date, address_id) values('Meles', 'Kidane', 'meles.kidane@lexicon.se', '2020-01-01' ,2);
insert into person(first_name, last_name, email, birth_date, address_id) values('Betti', 'Mebrahtom', 'betti.mebrahtom@lexicon.se', '2020-01-01' ,4);
insert into person(first_name, last_name, email, birth_date, address_id) values('Aron ', 'Kesete', 'Aron.kesete@lexicon.se', '2020-01-01' ,3);
insert into person(first_name, last_name, email, birth_date, address_id) values('Filmon', 'Mehari', 'filmon.merhery@lexicon.se', '2020-01-01' , 1);
insert into person(first_name, last_name, email, birth_date, address_id) values('Natu', 'kahase', 'natu.kahase@lexicon.se', '2020-01-01' ,2);
insert into person(first_name, last_name, email, birth_date, address_id) values('Salem', 'Hawki', 'Salem.hawiki@lexicon.se', '2020-01-01' ,4);
insert into person(first_name, last_name, email, birth_date, address_id) values('Esey', 'Bsrat', 'Esay.besrat@lexicon.se', '2020-01-01' ,3);

select * from task;


-- One To Many (Task _ Person)
create table task(
id int   not null   primary key   auto_increment,
title varchar(255) not null,
_description varchar(500),
person_id int,
foreign key (person_id) references person(id)
);


insert into task(title, _description, person_id) values('workshop', 'sql', 1);
insert into task(title, _description) values('task2', 'change the tire');
insert into task(title, _description, person_id) values('task3', 'test task3', 1);
insert into task(title, _description, person_id) values('task4', 'test task4', 2);
insert into task(title, _description, person_id) values('task5', 'test task5', 4);

select * from task; 
select * from task where id in(1,2);
select * from task where title like 't%';
select * from task where title like '%task%';
select * from task where id = 1 and title = 'workshop'; 

select t.id, t.title, p.email from task t inner join person p on t.person_id = p.id;
select t.id, t.title, p.email from task t left join person p on t.person_id = p.id;

-- Many To Many

create table _team(
id int   not null   primary key   auto_increment,
team_name varchar(255) not null
);
select * from _team;
create table persons_to_teams(
id int not null primary key auto_increment,
person_id int not null,
team_id int not null,
foreign key (person_id) references person(id),
foreign key (team_id) references _team(id)
);

select * from  persons_to_teams;




select count(*) from person;
select sum(id) from person;
